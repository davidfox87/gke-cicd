name: Build and Deploy Go HTTP Docker Image

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: top-chain-475617-p7
  REGION: us-central1
  GAR_LOCATION: us-central1
  APP: go-http-server
  DOCKER_REPO: test-repo

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout source code
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Authenticate to Google Cloud using service account JSON
    - name: Google auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    # 3. Install and configure gcloud
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}

    # 4. Configure Docker for Artifact Registry
    - name: Docker auth
      run: |
        gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

    # 5. Build Docker image
    - name: Build Docker image
      run: |
        docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REPO }}/${{ env.APP }}:${{ github.sha }}" -f deploy/Dockerfile .

    # 6. Push Docker image to Artifact Registry
    - name: Push Docker image
      run: |
        docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REPO }}/${{ env.APP }}:${{ github.sha }}"

    # 7. Apply Cloud Deploy pipeline & targets
    - name: Apply Cloud Deploy pipeline & targets
      run: |
        gcloud deploy apply --file deploy/cloud-deploy/pipeline.yaml --region=${{ env.REGION }}

    # 8. Create release name for Cloud Deploy
    - name: Create release name
      run: |
        echo "RELEASE_NAME=${{ env.APP }}-${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

    # 8. Create a Cloud Deploy release
    - name: Create Cloud Deploy release
      uses: google-github-actions/create-cloud-deploy-release@v0
      with:
        delivery_pipeline: 'helloworld-pipeline'
        name: '${{ env.RELEASE_NAME }}'
        region: '${{ env.REGION }}'
        description: '${{ github.event.head_commit.message }}'
        skaffold_file: 'deploy/cloud-deploy/skaffold.yaml'
        images: 'app=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REPO }}/${{ env.APP }}:${{ github.sha }}'
